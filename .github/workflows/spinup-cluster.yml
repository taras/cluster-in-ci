on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup environment variables
      run: |
        export PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        echo "::set-env name=PR_NUMBER::$PR_NUMBER"
        echo "::set-env name=TUNNEL_HOSTNAME::pr-$PR_NUMBER-cluster-in-ci.taras.app"

    - name: Create Cloudflare Credentials file
      run: mkdir $HOME/.cloudflared && echo -n $CERT_PEM | base64 -d > $HOME/.cloudflared/cert.pem
      env:
        CERT_PEM: ${{secrets.CLOUDFLARE_PEM_BASE64}}

    - name: Install microk8s with snap
      run: sudo snap install microk8s --classic --channel=1.18/stable

    - name: Verify that microk8s started
      run: sudo microk8s status --wait-ready

    - name: "Enable microk8s extensions: dns, helm3"
      run: sudo microk8s enable dns helm3

    - name: Write Cloudflare Credentials to Kubernetes secrets
      run: sudo microk8s kubectl create secret generic $TUNNEL_HOSTNAME --from-file="$HOME/.cloudflared/cert.pem"
    - run: sudo microk8s kubectl get secret

    - name: Start podinfo
      run: |
        cat <<EOF | sudo microk8s kubectl apply -f - 
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: podinfo
          name: podinfo
        spec:
          ports:
          - name: http
            port: 9898
          selector:
            app: podinfo
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: podinfo
          name: podinfo
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: podinfo
          template:
            metadata:
              labels:
                app: podinfo
            spec:
              containers:
                - name: podinfo
                  image: stefanprodan/podinfo:4.0.6
                  ports:
                    - containerPort: 9898
                  resources:
                    limits:
                      cpu: 100m
                      memory: 40Mi
                    requests:
                      cpu: 20m
                      memory: 40Mi
                - name: tunnel
                  image: msnelling/cloudflared:2020.6.3
                  env:
                    - name: TUNNEL_HOSTNAME
                      value: $TUNNEL_HOSTNAME
                    - name: TUNNEL_URL
                      value: http://127.0.0.1:9898
                  resources:
                    limits:
                      cpu: 10m
                      memory: 20Mi
                    requests:
                      cpu: 10m
                      memory: 20Mi
                  volumeMounts:
                    - mountPath: /etc/cloudflared
                      name: tunnel-secret
                      readOnly: true
                  readinessProbe:
                    httpGet:
                      host: $TUNNEL_HOSTNAME
                      scheme: HTTPS

              terminationGracePeriodSeconds: 60
              volumes:
                - name: tunnel-secret
                  secret:
                    secretName: $TUNNEL_HOSTNAME                   
        EOF

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v2
      env:
        CERT_PEM: ${{secrets.CLOUDFLARE_PEM_BASE64}}